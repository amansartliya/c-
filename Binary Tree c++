#include<iostream>
using namespace std;
class node{
    public:
    int data;
    node*left,*right;
    node(int d)
    {
        data=d;
        left=right=NULL;
    }
};

node* buildtree(){
    int data;
    cin>>data;
    if(data ==-1) return NULL;
    node*root= new node(data);
    root->left=buildtree();
    root->right=buildtree();
    return root;
}
void preorder(node*root)
{
    if(!root) return;
    cout<<root->data<<" ";
    preorder(root->left);
    preorder(root->right);
}
int countnodes(node*root)
{
    return(!root)? 0: countnodes(root->left)+countnodes(root->right)+1;
}
int height(node*root)
{
   return (!root)? 0 : max(height(root->left),height(root->right))+1;
}
int diameter(node* root)
{
    if(!root) return 0;
    int op1=height(root->left)+height(root->right);
    int op2=diameter(root->left);
    int op3=diameter(root->right);
    return max(op1,max(op2,op3));
}
int main()
{
    node*root=buildtree();
    preorder(root);
    cout<<endl;
    cout<<"Total number of nodes are:"<<countnodes(root)<<endl;
    cout<<"height of the tree is:"<<height(root)<<"\n";
    cout<<"max diameter is:"<<diameter(root);
      return 0;
}
